{"version":3,"sources":["CityDropDown.js","Search.js","BankDetailsPage.js","BankPage.js","App.js","serviceWorker.js","index.js"],"names":["options","value","label","DropDown","setData","useState","selectedOption","handleSelection","useEffect","prevData","city","onChange","filterResult","searchValue","bankDetails","filerObj","i","length","Object","values","filter","details","toUpperCase","includes","push","SearchBox","setSearchValue","searchResult","className","event","target","BankDetails","selectedBank","handleView","entries","map","class","onClick","PageSize","PaginationInitial","currentPage","lowerBound","upperBound","pageSize","BankTable","handleSelectedBank","setView","fav","view","data","loading","pagination","makeFav","detail","Set","slice","findIndex","ele","ifsc","showBankDetails","style","overflowX","result","Math","min","key","bind","bank_id","branch","address","district","state","bank_name","getBankTable","Pagination","dataLength","setPagination","Number","dataset","count","max","countElement","data-count","getCount","BankPage","bankData","setLoading","isFirstRun","useRef","current","localStorage","setItem","JSON","stringify","parse","getItem","axios","get","then","catch","err","console","warn","BankDetailsPage","display","width","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uhBAGA,IAAMA,EAAU,CACd,CAAEC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,UAAWC,MAAO,YAqBdC,EAlBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACUC,mBAAS,CACjDJ,MAAO,SACPC,MAAO,WAHuB,mBACzBI,EADyB,KACTC,EADS,KAShC,OAHAC,qBAAU,WACRJ,GAAQ,SAAAK,GAAQ,O,yVAAA,IAAUA,EAAV,CAAoBC,KAAMJ,EAAeL,aACxD,CAACK,IAEF,kBAAC,IAAD,CACEL,MAAOK,EACPK,SAAUJ,EACVP,QAASA,K,oOCpBf,IAAMY,EAAe,SAACC,EAAaC,GAEjC,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CAC5BE,OAAOC,OAAOL,EAAYE,IAAII,QAAO,SAAAC,GAAO,OACxD,GAAKA,GAASC,cAAcC,SAASV,EAAYS,kBAEvCL,QACXF,EAASS,KAAKV,EAAYE,IAG9B,OAAOD,GA2BMU,EAxBG,SAAC,GAA8B,IAA5BX,EAA2B,EAA3BA,YAAaV,EAAc,EAAdA,QAAc,EACRC,mBAAS,IADD,mBACvCQ,EADuC,KAC1Ba,EAD0B,KAG9ClB,qBAAU,WACRJ,GAAQ,SAAAK,GAAQ,O,yVAAA,IACXA,EADW,CAEdkB,aAAcf,EAAaC,EAAaC,UAEzC,CAACD,IAKJ,OACE,6BACE,2BACEZ,MAAOY,EACPe,UAAU,YACVjB,SATe,SAAAkB,GACnB,IAAI5B,EAAQ4B,EAAMC,OAAO7B,MACzByB,EAAezB,Q,yBCLJ8B,G,MAnBK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACnC,OACE,yBAAKL,UAAU,SACb,yBAAKA,UAAU,cAAf,gBACCV,OAAOgB,QAAQF,GAAcG,KAAI,SAAAd,GAAO,OACvC,yBAAKO,UAAU,WACb,yBAAKA,UAAU,OACb,gCAASP,EAAQ,KAEnB,yBAAKO,UAAU,OAAOP,EAAQ,QAGlC,yBAAKO,UAAU,gBACb,4BAAQQ,MAAM,cAAcC,QAAS,kBAAMJ,EAAW,KAAtD,Y,yjBCTR,IAAMK,EAAW,CACf,CAAErC,MAAO,IAAKC,MAAO,KACrB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,OAGlBqC,EAAoB,CACxBC,YAAa,EACbC,WAAY,EACZC,WAAY,GACZC,SAAU,IA4HNC,EAAY,SAAC,GAUZ,IATLC,EASI,EATJA,mBACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,QAII,IAHJvB,oBAGI,MAHW,GAGX,MAFJwB,kBAEI,MAFS,GAET,EADJ/C,EACI,EADJA,QAEMgD,EAAU,SAACC,EAAQL,GAErB5C,EADW,IAAT4C,EACM,SAAAvC,GAAQ,YACXA,EADW,CAEdsC,IAAI,YAAK,IAAIO,IAAJ,sBAAY7C,EAASsC,KAArB,CAA0BM,SAG7B,SAAA5C,GAAQ,YACXA,EADW,CAEdsC,IAAI,GAAD,mBACEtC,EAASsC,IAAIQ,MACd,EACA9C,EAASsC,IAAIS,WAAU,SAAAC,GAAG,OAAIA,EAAIC,OAASL,EAAOK,UAHnD,YAKEjD,EAASsC,IAAIQ,MACd9C,EAASsC,IAAIS,WAAU,SAAAC,GAAG,OAAIA,EAAIC,OAASL,EAAOK,QAAQ,UAO9DC,EAAkB,SAAA7C,GACtBgC,EAAQ,GACRD,EAAmB/B,IAmCrB,OACE,oCACE,yBAAK8C,MAAO,CAAEC,UAAW,SACvB,+BACE,+BACE,4BACE,uCACA,oCACA,uCACA,sCACA,uCACA,oCACA,wCACA,qCACA,0CAEDX,EACC,wCAjDS,SAAApC,GAEnB,IADA,IAAIgD,EAAS,GAEP9C,EAAImC,EAAWV,WACnBzB,EAAI+C,KAAKC,IAAIlD,EAAYG,OAAQkC,EAAWT,YAC5C1B,IACA,CACA,IAAKF,EAAYE,GAAG0C,KAClB,OAAO,KAETI,EAAOtC,KACL,wBACEI,UAAU,SACVqC,IAAKnD,EAAYE,GAAG0C,KACpBrB,QAASsB,EAAgBO,KAAK,KAAMpD,EAAYE,KAEhD,wBAAIqB,QAASe,EAAQc,KAAK,KAAMpD,EAAYE,GAAIgC,IACpC,IAATA,EAAa,MAAQ,UAExB,4BAAKlC,EAAYE,GAAG0C,MACpB,4BAAK5C,EAAYE,GAAGmD,SACpB,4BAAKrD,EAAYE,GAAGoD,QACpB,4BAAKtD,EAAYE,GAAGqD,SACpB,4BAAKvD,EAAYE,GAAGN,MACpB,4BAAKI,EAAYE,GAAGsD,UACpB,4BAAKxD,EAAYE,GAAGuD,OACpB,4BAAKzD,EAAYE,GAAGwD,aAI1B,OAAOV,EAqBGW,CACW,IAATzB,EAAaD,EAAMpB,EAAaV,OAASU,EAAesB,QAUlEyB,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,cAAejC,EAAe,EAAfA,SAAe,EACpBtC,mBAAS,CACjDJ,MAAO,KACPC,MAAO,OAHqD,mBACvDI,EADuD,KACvCC,EADuC,KAM9DC,qBAAU,WACRoE,GAAc,SAAAnE,GAAQ,YACjBA,EADiB,CAEpBkC,SAAUkC,OAAOvE,EAAeL,OAChCyC,WAAYmC,OAAOvE,EAAeL,OAClCuC,YAAa,EACbC,WAAY,SAEb,CAACnC,IA2BJ,OACE,oCACE,yBAAKsB,UAAU,QACb,iDACA,kBAAC,IAAD,CACE3B,MAAOK,EACPK,SAAUJ,EACVP,QAASsC,KAGb,yBAAKV,UAAU,WACb,yBAAKA,UAAU,UAAUS,QAtBN,SAAAR,GACvB,IAAMC,EAASD,EAAMC,OACjBA,GAAUA,EAAOgD,SAAWhD,EAAOgD,QAAQC,OAC7CH,GAAc,SAAAnE,GAAQ,YACjBA,EADiB,CAEpBiC,WAAYmC,OAAO/C,EAAOgD,QAAQC,OAASpC,EAC3CF,YAAaoC,OAAO/C,EAAOgD,QAAQC,OAAS,GAAKpC,EACjDH,YAAaqC,OAAO/C,EAAOgD,QAAQC,cArBxB,SAAAC,GAGf,IAFA,IAAID,EAAQ,EACRE,EAAe,GACZF,EAAQC,EAAMrC,GACnBoC,IACAE,EAAazD,KACX,yBAAKyC,IAAKc,EAAOnD,UAAU,QAAQsD,aAAYH,GAC5CA,IAIP,OAAOE,EA0BAE,CAASR,OAOLS,EAzRE,WAAO,IAAD,EACO/E,mBAAS,CACnCK,KAAM,KACNI,YAAa,GACba,aAAc,GACdgB,SAAU,GACVI,IAAK,KANc,mBACdsC,EADc,KACJjF,EADI,OAQeC,mBAASkC,GARxB,mBAQdY,EARc,KAQFyB,EARE,OASGvE,mBAAS,GATZ,mBASd2C,EATc,KASRF,EATQ,OAUSzC,oBAAS,GAVlB,mBAUd6C,EAVc,KAULoC,EAVK,OAWsBjF,mBAAS,IAX/B,mBAWd2B,EAXc,KAWAa,EAXA,KAaf0C,EAAaC,kBAAO,GAC1BhF,qBAAU,WACJ+E,EAAWE,QACbF,EAAWE,SAAU,EAIvBC,aAAaC,QAAb,eAAqCC,KAAKC,UAAUR,EAAStC,QAC5D,CAACsC,EAAStC,MAEbvC,qBAAU,WACRJ,GAAQ,SAAAK,GAAQ,YACXA,EADW,CAEdsC,IAAK6C,KAAKE,MAAMJ,aAAaK,QAAb,iBAAwC,aAEzD,IAEHvF,qBAAU,WACJ6E,EAAS3E,OACXkE,EAAcrC,GACVmD,aAAaK,QAAb,cAA4BV,EAAS3E,OACvCN,GAAQ,SAAAK,GAAQ,YACXA,EADW,CAEdK,YAAa8E,KAAKE,MAAMJ,aAAaK,QAAb,cAA4BV,EAAS3E,QAC7DiB,aAAc,SAGhB2D,GAAW,GACXU,IACGC,IADH,4DAEyDZ,EAAS3E,OAE/DwF,MAAK,YAAoB,IAAD,IAAhBjD,YAAgB,MAAT,GAAS,EACvBqC,GAAW,GACXI,aAAaC,QAAb,cAA4BN,EAAS3E,MAAQkF,KAAKC,UAAU5C,IAC5D7C,GAAQ,SAAAK,GAAQ,YACXA,EADW,CAEdK,YAAamC,EACbtB,aAAc,WAGjBwE,OAAM,SAAAC,GACLd,GAAW,GACXe,QAAQC,KAAK,CAAEF,eAItB,CAACf,EAAS3E,OAEb,IAAMuB,EAAa,SAAAe,GACjBF,EAAQE,IAGV,OAAa,IAATA,EACK,kBAACuD,EAAD,CAAiBtE,WAAYA,EAAYD,aAAcA,IAG9D,oCACE,yBAAK4B,MAAO,CAAE4C,QAAS,SACrB,yBACE5E,UAAoB,IAAToB,EAAa,kBAAoB,OAC5CX,QAASJ,EAAWiC,KAAK,KAAM,IAFjC,SAMA,yBACEtC,UAAoB,IAAToB,EAAa,kBAAoB,OAC5CX,QAASJ,EAAWiC,KAAK,KAAM,IAFjC,cAOF,oCACY,IAATlB,GACC,yBAAKY,MAAO,CAAE4C,QAAS,SACrB,yBAAK5C,MAAO,CAAE6C,MAAO,QACnB,kBAAC,EAAD,CAAUrG,QAASA,KAErB,yBAAKwD,MAAO,CAAE6C,MAAO,QACnB,kBAAC,EAAD,CAAW3F,YAAauE,EAASvE,YAAaV,QAASA,MAI7D,kBAAC,EAAD,CACEyC,mBAAoBA,EACpBC,QAASA,EACT1C,QAASA,EACT+C,WAAYA,EACZJ,IAAKsC,EAAStC,IACdC,KAAMA,EACNrB,aAAc0D,EAAS1D,aACvBsB,KAAMoC,EAASvE,YACfoC,QAASA,IAED,IAATF,GACC,kBAAC,EAAD,CACEL,SAAUQ,EAAWR,SACrBiC,cAAeA,EACfD,WACEU,EAAS1D,aAAaV,QAAUoE,EAASvE,YAAYG,Y,MC3HpDyF,MARf,WACE,OACE,yBAAK9E,UAAU,OACb,kBAAC,EAAD,QCMc+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,kB","file":"static/js/main.d65f2763.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nconst options = [\n  { value: \"MUMBAI\", label: \"MUMBAI\" },\n  { value: \"PUNE\", label: \"PUNE\" },\n  { value: \"BANGALORE\", label: \"BANGALORE\" },\n  { value: \"CHENNAI\", label: \"CHENNAI\" }\n];\n\nconst DropDown = ({ setData }) => {\n  const [selectedOption, handleSelection] = useState({\n    value: \"MUMBAI\",\n    label: \"MUMBAI\"\n  });\n\n  useEffect(() => {\n    setData(prevData => ({ ...prevData, city: selectedOption.value }));\n  }, [selectedOption]);\n  return (\n    <Select\n      value={selectedOption}\n      onChange={handleSelection}\n      options={options}\n    />\n  );\n};\n\nexport default DropDown;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Search.css\";\n\nconst filterResult = (searchValue, bankDetails) => {\n  let filerObj = [];\n  for (let i = 0; i < bankDetails.length; i++) {\n    let filtered = Object.values(bankDetails[i]).filter(details =>\n      (\"\" + details).toUpperCase().includes(searchValue.toUpperCase())\n    );\n    if (filtered.length) {\n      filerObj.push(bankDetails[i]);\n    }\n  }\n  return filerObj;\n};\n\nconst SearchBox = ({ bankDetails, setData }) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    setData(prevData => ({\n      ...prevData,\n      searchResult: filterResult(searchValue, bankDetails)\n    }));\n  }, [searchValue]);\n  const handleChange = event => {\n    let value = event.target.value;\n    setSearchValue(value);\n  };\n  return (\n    <div>\n      <input\n        value={searchValue}\n        className=\"searchBox\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./BankDetails.css\";\n\nconst BankDetails = ({ selectedBank, handleView }) => {\n  return (\n    <div className=\"mt100\">\n      <div className=\"textCenter\">Bank Details</div>\n      {Object.entries(selectedBank).map(details => (\n        <div className=\"details\">\n          <div className=\"mx1\">\n            <strong>{details[0]}</strong>\n          </div>\n          <div className=\"mx1\">{details[1]}</div>\n        </div>\n      ))}\n      <div className=\"buttonCenter\">\n        <button class=\"btn default\" onClick={() => handleView(1)}>Back</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BankDetails;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport DropDown from \"./CityDropDown\";\nimport SearchBox from \"./Search\";\nimport \"./BankPage.css\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport BankDetailsPage from \"./BankDetailsPage\";\nconst PageSize = [\n  { value: \"5\", label: \"5\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"15\", label: \"15\" },\n  { value: \"20\", label: \"20\" },\n  { value: \"25\", label: \"25\" }\n];\n\nconst PaginationInitial = {\n  currentPage: 1,\n  lowerBound: 0,\n  upperBound: 10,\n  pageSize: 10\n};\n\nconst BankPage = () => {\n  const [bankData, setData] = useState({\n    city: null,\n    bankDetails: [],\n    searchResult: [],\n    pageSize: 10,\n    fav: []\n  });\n  const [pagination, setPagination] = useState(PaginationInitial);\n  const [view, setView] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [selectedBank, handleSelectedBank] = useState({});\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    localStorage.setItem(`fylefavBanks`, JSON.stringify(bankData.fav));\n  }, [bankData.fav]);\n\n  useEffect(() => {\n    setData(prevData => ({\n      ...prevData,\n      fav: JSON.parse(localStorage.getItem(`fylefavBanks`) || \"[]\")\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (bankData.city) {\n      setPagination(PaginationInitial);\n      if (localStorage.getItem(`fyle${bankData.city}`)) {\n        setData(prevData => ({\n          ...prevData,\n          bankDetails: JSON.parse(localStorage.getItem(`fyle${bankData.city}`)),\n          searchResult: []\n        }));\n      } else {\n        setLoading(true);\n        axios\n          .get(\n            `https://vast-shore-74260.herokuapp.com/banks?city=${bankData.city}`\n          )\n          .then(({ data = [] }) => {\n            setLoading(false);\n            localStorage.setItem(`fyle${bankData.city}`, JSON.stringify(data));\n            setData(prevData => ({\n              ...prevData,\n              bankDetails: data,\n              searchResult: []\n            }));\n          })\n          .catch(err => {\n            setLoading(false);\n            console.warn({ err });\n          });\n      }\n    }\n  }, [bankData.city]);\n\n  const handleView = view => {\n    setView(view);\n  };\n\n  if (view === 3) {\n    return <BankDetailsPage handleView={handleView} selectedBank={selectedBank} />;\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <div\n          className={view === 1 ? \"tabs tab-active\" : \"tabs\"}\n          onClick={handleView.bind(null, 1)}\n        >\n          Banks\n        </div>\n        <div\n          className={view === 2 ? \"tabs tab-active\" : \"tabs\"}\n          onClick={handleView.bind(null, 2)}\n        >\n          Fav Banks\n        </div>\n      </div>\n      <>\n        {view === 1 && (\n          <div style={{ display: \"flex\" }}>\n            <div style={{ width: \"30%\" }}>\n              <DropDown setData={setData} />\n            </div>\n            <div style={{ width: \"70%\" }}>\n              <SearchBox bankDetails={bankData.bankDetails} setData={setData} />\n            </div>\n          </div>\n        )}\n        <BankTable\n          handleSelectedBank={handleSelectedBank}\n          setView={setView}\n          setData={setData}\n          pagination={pagination}\n          fav={bankData.fav}\n          view={view}\n          searchResult={bankData.searchResult}\n          data={bankData.bankDetails}\n          loading={loading}\n        />\n        {view === 1 && (\n          <Pagination\n            pageSize={pagination.pageSize}\n            setPagination={setPagination}\n            dataLength={\n              bankData.searchResult.length || bankData.bankDetails.length\n            }\n          />\n        )}\n      </>\n    </>\n  );\n};\n\nconst BankTable = ({\n  handleSelectedBank,\n  setView,\n  fav,\n  view,\n  data,\n  loading,\n  searchResult = [],\n  pagination = {},\n  setData\n}) => {\n  const makeFav = (detail, view) => {\n    if (view === 1) {\n      setData(prevData => ({\n        ...prevData,\n        fav: [...new Set([...prevData.fav, detail])]\n      }));\n    } else {\n      setData(prevData => ({\n        ...prevData,\n        fav: [\n          ...prevData.fav.slice(\n            0,\n            prevData.fav.findIndex(ele => ele.ifsc === detail.ifsc)\n          ),\n          ...prevData.fav.slice(\n            prevData.fav.findIndex(ele => ele.ifsc === detail.ifsc) + 1\n          )\n        ] // prevData.fav.findIndex(ele => ele.ifsc === detail.ifsc)\n      }));\n    }\n  };\n\n  const showBankDetails = bankDetails => {\n    setView(3);\n    handleSelectedBank(bankDetails)\n  };\n\n  const getBankTable = bankDetails => {\n    let result = [];\n    for (\n      let i = pagination.lowerBound;\n      i < Math.min(bankDetails.length, pagination.upperBound);\n      i++\n    ) {\n      if (!bankDetails[i].ifsc) {\n        return null;\n      }\n      result.push(\n        <tr\n          className=\"cursor\"\n          key={bankDetails[i].ifsc}\n          onClick={showBankDetails.bind(null, bankDetails[i])}\n        >\n          <td onClick={makeFav.bind(null, bankDetails[i], view)}>\n            {view === 1 ? \"Add\" : \"Remove\"}\n          </td>\n          <td>{bankDetails[i].ifsc}</td>\n          <td>{bankDetails[i].bank_id}</td>\n          <td>{bankDetails[i].branch}</td>\n          <td>{bankDetails[i].address}</td>\n          <td>{bankDetails[i].city}</td>\n          <td>{bankDetails[i].district}</td>\n          <td>{bankDetails[i].state}</td>\n          <td>{bankDetails[i].bank_name}</td>\n        </tr>\n      );\n    }\n    return result;\n  };\n  return (\n    <>\n      <div style={{ overflowX: \"auto\" }}>\n        <table>\n          <tbody>\n            <tr>\n              <th>Add Fav</th>\n              <th>ifsc</th>\n              <th>bank_id</th>\n              <th>branch</th>\n              <th>address</th>\n              <th>city</th>\n              <th>district</th>\n              <th>state</th>\n              <th>bank_name</th>\n            </tr>\n            {loading ? (\n              <div>Loading</div>\n            ) : (\n              getBankTable(\n                view === 2 ? fav : searchResult.length ? searchResult : data\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nconst Pagination = ({ dataLength, setPagination, pageSize }) => {\n  const [selectedOption, handleSelection] = useState({\n    value: \"10\",\n    label: \"10\"\n  });\n\n  useEffect(() => {\n    setPagination(prevData => ({\n      ...prevData,\n      pageSize: Number(selectedOption.value),\n      upperBound: Number(selectedOption.value),\n      currentPage: 1,\n      lowerBound: 0\n    }));\n  }, [selectedOption]);\n\n  const getCount = max => {\n    let count = 0;\n    let countElement = [];\n    while (count < max / pageSize) {\n      count++;\n      countElement.push(\n        <div key={count} className=\"child\" data-count={count}>\n          {count}\n        </div>\n      );\n    }\n    return countElement;\n  };\n\n  const handlePagination = event => {\n    const target = event.target;\n    if (target && target.dataset && target.dataset.count) {\n      setPagination(prevData => ({\n        ...prevData,\n        upperBound: Number(target.dataset.count) * pageSize,\n        lowerBound: (Number(target.dataset.count) - 1) * pageSize,\n        currentPage: Number(target.dataset.count)\n      }));\n    }\n  };\n  return (\n    <>\n      <div className=\"my-2\">\n        <div>Select Page Size</div>\n        <Select\n          value={selectedOption}\n          onChange={handleSelection}\n          options={PageSize}\n        />\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"scrolls\" onClick={handlePagination}>\n          {getCount(dataLength)}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BankPage;\n","import React from \"react\";\nimport BankPage from \"./BankPage\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BankPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}